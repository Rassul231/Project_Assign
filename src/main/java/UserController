package kz.aitu.doxbin.controllers;

import kz.aitu.doxbin.models.User;
import kz.aitu.doxbin.services.interfaces.UserServiceInterface;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("users")
public class UserController {
    private final UserServiceInterface service;

    public UserController(@Qualifier("userService") UserServiceInterface service) {
        this.service = service;
    }
    @GetMapping("/all")
    public List<User> getAll(){
        return service.getAllUser();
    }

    @PostMapping("/reg")
    public ResponseEntity<String> register(@RequestBody User user){
        User ifExist =  service.getUserByUsername(user.getUsername());
        if (ifExist == null){
            User newUser = service.create(user);
            if(newUser==null){
                return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
            }
            else{
                return new ResponseEntity<>("You registrated!",HttpStatus.CREATED);
            }
        }
        else{
            return new ResponseEntity<>("Error,try again", HttpStatus.UNAUTHORIZED);
        }
    }
    @PostMapping("/log")
    public ResponseEntity<String> login(@RequestBody User loginUser) {
        String username = loginUser.getUsername();
        String password = loginUser.getPassword();
        User userFromDb = service.getUserByUsername(username);
        if (userFromDb != null && userFromDb.getPassword().equals(password)) {
            return new ResponseEntity<>("Welcome!", HttpStatus.OK);
        } else {
            return new ResponseEntity<>("Wrong email or password", HttpStatus.UNAUTHORIZED);
        }
    }
    @PostMapping("/update/{user_id}/{amount}")
    public ResponseEntity<String> updateBalance(@PathVariable("user_id") int userId, @PathVariable("amount") int amount) {
        service.upBalance(userId, amount);
        return new ResponseEntity<>("Balance have been updated", HttpStatus.OK);
    }

}
